---
title: "Bias Analysis in CV Parsing Pipeline"
format:
  html:
    toc: false
---

### Introduction 

LLMs can be subject to cultural biases. One such domain is recruiting, where LLMs are used to extract information from candidates’ CVs and then to select the most suitable profiles. These biases may favour or penalize applicants based on language or cultural cues, risking the exclusion of qualified talent.


###  Our project

Our project therefore inspects the CV parsing pipeline to uncover and mitigate such disparities.
Below you’ll find the main sections, each linked to provide an overview and access to code/results.


- **[01 – Problem Statement](pages/01-problem.qmd)**  
    This section defines the scope, data sources and fairness questions guiding our bias analysis of the CV parser.

- **[02 – Pipeline](pages/02-pipeline.qmd)**  
    This section provides a comprehensive overview of the entire analysis pipeline, walking through all stages, from initial data cleaning to the final bias detection.

- **[03 – Results](pages/03-results.qmd)**  
    Presents visualizations and statistics that expose where and how the parser over or under represents certain skills.

- **04 – Future work**  
  Additional validation steps and bias mitigation strategies for the parsing pipeline.


## Repository Structure

```text

├── hiring_cv_bias
│   ├── bias_detection.  # 
│   │   ├── fuzzy  # 
│   │   │   ├── parsing.py
│   │   │   └── utils.py
│   │   └── rule_based #
│   │       ├── app
│   │       │   └── labeling_cv_app.py
│   │       ├── data.py
│   │       ├── evaluation
│   │       │   ├── bias.py # 
│   │       │   ├── compare_parser.py
│   │       │   └── metrics.py
│   │       ├── extractors.py
│   │       ├── parser.py
│   │       ├── patterns.py
│   │       └── utils.py
│   ├── cleaning # 
│   │   ├── common.py
│   │   └── raw_cv.py
│   ├── exploration # 
│   │   ├── gender_analysis.py
│   │   ├── utils.py
│   │   └── visualize.py
│   ├── hard_soft_skills_labelling # 
│   │   ├── hard_soft_skill_labelling.ipynb
│   │   └── utils.py
│   ├── translation
│   │   └── translate.py
│   └── utils.py
├── pyproject.toml
├── README.md
└── uv.lock

```